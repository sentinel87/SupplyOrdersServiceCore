// <auto-generated />
using System;
using DatabaseCreator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DatabaseCreator.Migrations
{
    [DbContext(typeof(SupplyContext))]
    [Migration("20220605124202_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SupplyOrdersServiceCore.Domain.Models.ClientFtpInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id_client_ftp_info")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClientCompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("client_company_id");

                    b.Property<string>("FtpDirectory")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ftp_directory");

                    b.HasKey("Id");

                    b.ToTable("client_ftp_info");
                });

            modelBuilder.Entity("SupplyOrdersServiceCore.Domain.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_order")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClientCompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("client_company_id");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("creation_date");

                    b.Property<string>("FtpFile")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("ftp_file");

                    b.Property<int>("FtpStatus")
                        .HasColumnType("integer")
                        .HasColumnName("ftp_status");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("modification_date");

                    b.Property<string>("OrderFile")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("order_file");

                    b.Property<string>("OrderSymbol")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("order_symbol");

                    b.Property<string>("ResponseFile")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("response_file");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<int>("Wholesaler")
                        .HasColumnType("integer")
                        .HasColumnName("wholesaler");

                    b.HasKey("Id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("SupplyOrdersServiceCore.Domain.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id_product")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CentralIdentNumber")
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)")
                        .HasColumnName("central_ident_number");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer")
                        .HasColumnName("company_id");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("ProcessedQuantity")
                        .HasColumnType("integer")
                        .HasColumnName("processed_quantity");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<long?>("order_fk")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("order_fk");

                    b.ToTable("products");
                });

            modelBuilder.Entity("SupplyOrdersServiceCore.Domain.Models.Product", b =>
                {
                    b.HasOne("SupplyOrdersServiceCore.Domain.Models.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("order_fk");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("SupplyOrdersServiceCore.Domain.Models.Order", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
